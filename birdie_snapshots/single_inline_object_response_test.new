---
version: 1.2.7
title: single_inline_object_response_test
---
import gleam/bool
import gleam/result
import gleam/dynamic/decode
import gleam/json
import gleam/float
import gleam/int
import gleam/http/response
import gleam/http
import myservice/schema
import myservice/utils
import gleam/option.{type Option, None}

pub type GetUsersResponse {
  GetUsersResponse(items: List(String), thing: Option(schema.Thing))
}

pub fn get_users_request(base) {
  let method = http.Get
  let path = "/users"
  let query = []
  base |> utils.set_method(method) |> utils.append_path(path) |> utils.set_query(
    query,
  )
}

pub fn get_users_response(response) {
  let response.Response(status:, body:, ..) = response
  case status {
    200 -> json.parse_bits(body, {
        use items <- decode.field("items", decode.list(decode.string))
        use thing <- decode.optional_field(
          "thing",
          None,
          decode.optional(schema.thing_decoder()),
        )
        decode.success(GetUsersResponse(items: items, thing: thing))
      }) |> result.map(Ok)
    _ -> response |> Error |> Ok
  }
}
