---
version: 1.3.0
title: object_and_additional_test
file: ./test/oas/generator_test.gleam
test_name: object_and_additional_test
---
import gleam/option.{type Option, None}
import myservice/utils
import gleam/json
import gleam/dynamic
import gleam/dynamic/decode
import gleam/dict

pub type Preference {
  Preference(colour: String, additional_properties: dict.Dict(String, Int))
}

pub fn preference_decoder() {
  use colour <- decode.field("colour", decode.string)
  use additional_properties <- utils.decode_additional(["colour"], decode.int)
  decode.success(
    Preference(colour: colour, additional_properties: additional_properties),
  )
}

pub fn preference_encode(data: Preference) {
  json.object(
    [
      #("colour", json.string(data.colour)),
      ..dict.to_list(
        dict.map_values(
          data.additional_properties,
          fn(_key, value) { json.int(value) },
        ),
      )
    ],
  )
}
